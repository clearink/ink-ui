import { constants } from '@mink-ui/scripts'

import type { WatcherDataItem } from '../interface'

export default function generateSourceText(items: WatcherDataItem[]) {
  const compDir = constants.resolveCore('./src')

  const blogDir = constants.resolveCwd('./src/pages')

  return `/* This file is automatically generated, please do not manually modify it */
import type { CustomRouteObject } from '@shared/types'

import { CommonLayout } from '@features/layouts'
import lazyLoad from '@libs/lazy-load'
import NotFound from '@pages/404'
import HomeLayout from '@pages/home/layout'
import { Outlet } from 'react-router-dom'

const routes: CustomRouteObject[] = [
  {
    path: '/',
    element: <HomeLayout />,
    children: [
      {
        index: true,
        component: lazyLoad(() => import('@pages/home/page')),
      },
      {
        element: <CommonLayout />,
        children: [
          {
            path: 'component',
            element: <Outlet />,
            children: [
              {
                index: true,
                component: lazyLoad(() => import("@pages/components/overview/page")),
                meta: { category: 'component', title: '组件总览' },
              },
              ${items
                .filter(item => item.meta.category === 'component')
                .map((item) => {
                  const specifier = item.filePath.replace(compDir, '@mink-ui/core')

                  return `{${[
                    `path: ${JSON.stringify(item.routePath)}`,
                    `meta: ${JSON.stringify(item.meta)}`,
                    `component: lazyLoad(() => import(${JSON.stringify(specifier)}))`,
                  ].filter(Boolean).join(',')}},`
                })
                .join('\n')}
            ]
          },
          {
            path: 'component-en',
            element: <Outlet />,
            children: [
              ${items
                .filter(item => item.meta.category === 'component-en')
                .map((item) => {
                  const specifier = item.filePath.replace(compDir, '@mink-ui/core')

                  return `{${[
                    `path: ${JSON.stringify(item.routePath)}`,
                    `meta: ${JSON.stringify(item.meta)}`,
                    `component: lazyLoad(() => import(${JSON.stringify(specifier)}))`,
                  ].filter(Boolean).join(',')}},`
                })
                .join('\n')}
            ]
          },
          {
            path: 'blog',
            element: <Outlet />,
            children: [
              ${items
                .filter(item => item.meta.category === 'blog')
                .map((item, index, list) => {
                  const specifier = item.filePath.replace(blogDir, '@pages')

                  return `{${[
                    index === list.length - 1
                      ? 'index: true'
                      : `path: ${JSON.stringify(item.routePath)}`,
                    `meta: ${JSON.stringify(item.meta)}`,
                    `component: lazyLoad(() => import(${JSON.stringify(specifier)}))`,
                  ].filter(Boolean).join(',')}},`
                })
                .join('\n')}
            ]
          },
        ]
      },
    ],
  },
  {
    path: '*',
    element: <NotFound />
  },
]
    
export default routes
`
}
